name: Publish design tokens

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://npm.pkg.github.com/
          scope: '@piacentinithiago'

      - name: Authenticate .npmrc
        run: |
          echo "@piacentinithiago:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_PUBLISH_TOKEN }}" >> .npmrc

      - name: Install dependencies
        run: yarn install

      # Só atualiza o package.json se for uma tag (ex: v1.2.3)
      - name: Atualiza package.json com versão da tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          echo "📝 Atualizando package.json com a versão da tag: $TAG_VERSION"
          jq --arg v "$TAG_VERSION" '.version = $v' package.json > tmp.$$.json && mv tmp.$$.json package.json

      - name: Rebuild tokens
        run: |
          echo "📁 Conteúdo antes do build:"
          ls -R .
          echo "🔨 Rodando build..."
          yarn build
          echo "📁 Conteúdo depois do build:"
          ls -R build/

      - name: Commit build folder if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add build/ package.json

          # Só faz commit se houve mudança no build ou version
          git diff --staged --quiet || git commit -m "chore(build): atualiza arquivos gerados [skip ci]"

          BRANCH_NAME=$(git for-each-ref --format='%(refname:short)' "$(git symbolic-ref -q HEAD || echo refs/heads/$(git rev-parse --short HEAD))")
          git push origin "HEAD:refs/heads/$BRANCH_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          echo "🚀 Publishing..."
          yarn publish --access public || echo "⚠️ Pacote já publicado ou erro de versão"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
